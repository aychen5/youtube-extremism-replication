alternative_superconsumers <- activity_data_supers %>%
filter(super_alternative == 1)
weighted_mean_fxn("minutes_at_yt_video_time_elapsed_capped_total_week",
data = alternative_superconsumers) %>%
pull(weighted_median)
1714.798/60
extemist_superconsumers <- activity_data_supers %>%
filter(super_extremist == 1)
weighted_mean_fxn("minutes_at_yt_video_time_elapsed_capped_total_week",
data = extemist_superconsumers)  %>%
pull(weighted_median)
979/60
weighted_mean_fxn("minutes_at_yt_video_time_elapsed_capped_total_week",
data = activity_data_supers)  %>%
pull(weighted_median)
activity_data_supers %>%
filter(super_alternative == 1) %>%
nrow()
activity_data_supers %>%
filter(super_extremist == 1) %>%
nrow()
topuser_plot <- function (data,
channel_type,
title,
ylabel,
y_limit = 5e4,
figure_size,
figure_space) {
nobs <- nrow(data %>% distinct(caseid))
if (channel_type == 'Extremist') {
p <- data %>%
mutate(channel_type = factor(
channel_type,
levels = c("extremist", "alternative", "mainstream", "other")
)) %>%
ggplot(., aes(x = rank,
y = minutes_value,
fill = channel_type)) +
geom_col(position = position_stack(reverse = TRUE)) +
geom_image(
data = . %>%
filter((super_alternative == 1) &
channel_type == "other"),
aes(image = image,
y = figure_space),
size = figure_size,
show.legend = FALSE
)
} else if (channel_type == 'Alternative') {
p <-  data %>%
ggplot(., aes(x = rank,
y = minutes_value,
fill = channel_type)) +
geom_col(position = position_stack(reverse = TRUE)) +
geom_image(
data = . %>%
filter((super_extremist == 1) &
channel_type == "other"),
aes(image = image,
y = figure_space),
size = figure_size,
show.legend = FALSE
)
}
p +
scale_fill_manual(
name = "",
values = c(
"alternative" = "#FFA500",
"extremist" = "#CD5C5C",
"mainstream" = "#015CB9",
"other" = "#E3E6E6"
),
labels = c(
"alternative" = "Alternative \nchannels",
"extremist" = "Extremist \nchannels",
"mainstream" = "Mainstream \nmedia",
"other" = "Other \nchannels"
)
) +
labs(x = "",
y = ylabel,
title = paste0(title, " (n = ", nobs, ")")) +
theme_minimal() +
theme(
legend.position = 'bottom',
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_text(hjust = .95)
) +
coord_cartesian(ylim = c(-160, y_limit))
}
# alternative superconsumers
alternative_superconsumers_weeks_plot <-
topuser_plot(
data = top_time_all_weeks_most_alt,
figure_space = -160,
figure_size = .075,
channel_type = "Alternative",
title = "Alternative channel superconsumers",
ylabel = "Minutes per week on YouTube videos",
y_limit = 3e3
)
# extremist superconsumers
extremist_superconsumers_weeks_plot <-
topuser_plot(
data = top_time_all_weeks_most_ext,
figure_space = -160,
figure_size = .075,
channel_type = "Extremist",
title = "Extremist channel superconsumers",
ylabel = "Minutes per week on YouTube videos",
y_limit = 3e3
)
# same legend
common_legend_superconsumers <-
get_legend(alternative_superconsumers_weeks_plot)
dev.off()
# alternative superconsumers
alternative_superconsumers_weeks_plot <-
topuser_plot(
data = top_time_all_weeks_most_alt,
figure_space = -160,
figure_size = .075,
channel_type = "Alternative",
title = "Alternative channel superconsumers",
ylabel = "Minutes per week on YouTube videos",
y_limit = 3e3
)
# extremist superconsumers
extremist_superconsumers_weeks_plot <-
topuser_plot(
data = top_time_all_weeks_most_ext,
figure_space = -160,
figure_size = .075,
channel_type = "Extremist",
title = "Extremist channel superconsumers",
ylabel = "Minutes per week on YouTube videos",
y_limit = 3e3
)
# same legend
common_legend_superconsumers <-
get_legend(alternative_superconsumers_weeks_plot)
### ----------- data
# survey + extension data for all participants
merged_data <- read_rds("data/yg_browser_cces_merged.rds")
# activity data
activity_data <- read_rds("data/activity_yg_cces.rds")
# browser history data
browser_history_data <-read_rds("data/browser_history_yg_cces.rds")
# over time data for consumption over time
at_over_time <- read_rds("data/activity_time_user_by_date.rds")
at_over_views <- read_rds("data/activity_count_user_by_date.rds")
# color palette
color_palette <- c("#FFA500", "#CD5C5C", "#015CB9", "#E3E6E6")
at_over_time
at_over_time
View(at_over_time)
### ----------- data
# survey + extension data for all participants
merged_data <- read_rds("data/yg_browser_cces_merged.rds")
# activity data
activity_data <- read_rds("data/activity_yg_cces.rds")
# browser history data
browser_history_data <-read_rds("data/browser_history_yg_cces.rds")
# over time data for consumption over time
at_over_time <- read_rds("data/activity_time_user_by_date.rds")
at_over_views <- read_rds("data/activity_count_user_by_date.rds")
# color palette
color_palette <- c("#FFA500", "#CD5C5C", "#015CB9", "#E3E6E6")
# string wrap for factor variables
str_wrap_factor <- function(x, ...) {
levels(x) <- str_wrap(levels(x), ...)
x
}
# better labels for channel types
recode_channel_type_fxn <- function(old_name) {
recode(
old_name,
alternative = "Alternative \nchannel",
extremist = "Extremist \nchannel",
mainstream = "Mainstream media \nchannel",
other = "Other \nchannel"
)
}
recode_fxn <- function(old_name) {
recode(old_name,
rr_tercilemed = "RR, medium",
rr_tercilehigh = "RR, high",
ft_jew_binnedwarm = "Feeling Jews, warm",
ft_jew_binnedmedium = "Feeling Jews, medium",
rr_cts = "Racial resentment",
rr_over_mean_cces = "Denial of racism",
`raceNon-white` = "Non-white",
jw_cts = "Feeling Jews",
genderMale = "Male",
fem_cts = "Hostile sexism",
pid_leanDemocrat = "Democrat",
pid_leanRepublican = "Republican",
`educ2Some college` = "Some college",
`educ2Post-grad` = "Post-grad",
`educ24-year` = "Bachelors",
age = "Age")
}
# refactoring order of predictors
refactor_fxn <- function (var_list) {
if ("Republican" %in% var_list) {
demo_vars <- c(
"Post-grad",
"Bachelors",
"Some college",
"Non-white",
"Male",
"Age",
"Republican",
"Democrat"
)
} else {
demo_vars <- c("Post-grad",
"Bachelors",
"Some college",
"Non-white",
"Male",
"Age")
}
if (length(var_list) == 9 * 3 | length(var_list) == 11 * 3) {
if ("Racial resentment" %in% var_list) {
factor(
var_list,
levels = c(
demo_vars,
"Feeling Jews",
"Racial resentment",
"Hostile sexism"
)
)
} else
(factor(var_list,
levels = c(
demo_vars,
"Feeling Jews",
"Denial of racism",
"Hostile sexism"
)))
} else if (length(var_list) == 7 * 3) {
if ("Racial resentment" %in% var_list) {
factor(var_list,
levels = c(demo_vars, "Racial resentment"))
} else
(factor(var_list,
levels = c(demo_vars, "Female resentment")))
} else if (length(var_list) == 6 * 3) {
factor(var_list,
levels = demo_vars)
} else {
var_list
}
}
topuser_plot <- function (data,
channel_type,
title,
ylabel,
y_limit = 5e4,
figure_size,
figure_space) {
nobs <- nrow(data %>% distinct(caseid))
if (channel_type == 'Extremist') {
p <- data %>%
mutate(channel_type = factor(
channel_type,
levels = c("extremist", "alternative", "mainstream", "other")
)) %>%
ggplot(., aes(x = rank,
y = minutes_value,
fill = channel_type)) +
geom_col(position = position_stack(reverse = TRUE)) +
geom_image(
data = . %>%
filter((super_alternative == 1) &
channel_type == "other"),
aes(image = image,
y = figure_space),
size = figure_size,
show.legend = FALSE
)
} else if (channel_type == 'Alternative') {
p <-  data %>%
ggplot(., aes(x = rank,
y = minutes_value,
fill = channel_type)) +
geom_col(position = position_stack(reverse = TRUE)) +
geom_image(
data = . %>%
filter((super_extremist == 1) &
channel_type == "other"),
aes(image = image,
y = figure_space),
size = figure_size,
show.legend = FALSE
)
}
p +
scale_fill_manual(
name = "",
values = c(
"alternative" = "#FFA500",
"extremist" = "#CD5C5C",
"mainstream" = "#015CB9",
"other" = "#E3E6E6"
),
labels = c(
"alternative" = "Alternative \nchannels",
"extremist" = "Extremist \nchannels",
"mainstream" = "Mainstream \nmedia",
"other" = "Other \nchannels"
)
) +
labs(x = "",
y = ylabel,
title = paste0(title, " (n = ", nobs, ")")) +
theme_minimal() +
theme(
legend.position = 'bottom',
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_text(hjust = .95)
) +
coord_cartesian(ylim = c(-160, y_limit))
}
# recommendations data
recs_data <-
read_delim("data/recommendation_pipeline.tsv", delim = '\t')
recs_data
source("helper_fxns.R")
alternative_followed_table
# code chunk settings
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
fig.width = 12,
fig.align = 'center')
usethis::use_blank_slate()
### ----------- packages + settings
pacman::p_load(tidyverse,
lubridate,
#stats
survey,
sandwich,
lmtest,
fastDummies,
# figs and tables
ggimage,
AMR,
waffle,
cowplot,
zoo,
pscl,
kableExtra,
texreg)
### ----------- data
# survey + extension data for all participants
merged_data <- read_rds("data/yg_browser_cces_merged.rds")
# activity data
activity_data <- read_rds("data/activity_yg_cces.rds")
# browser history data
browser_history_data <-read_rds("data/browser_history_yg_cces.rds")
# over time data for consumption over time
at_over_time <- read_rds("data/activity_time_user_by_date.rds")
at_over_views <- read_rds("data/activity_count_user_by_date.rds")
# recommendations data
recs_data <-
read_delim("data/recommendation_pipeline.tsv", delim = '\t')
# color palette
color_palette <- c("#FFA500", "#CD5C5C", "#015CB9", "#E3E6E6")
at_over_time
View(at_over_time)
# without hostile sexism
f_time_pid_alternative_rr <-
formula(
activity_yt_video_time_elapsed_capped_total_alternative_all ~  rr_cts + jw_cts + age + gender + educ2 + race
)
f_time_pid_extremist_rr <-
formula(
activity_yt_video_time_elapsed_capped_total_extremist_all  ~  rr_cts + jw_cts + age + gender + educ2 + race
)
f_time_pid_mainstream_rr <-
formula(
activity_yt_video_time_elapsed_capped_total_mainstream_all  ~  rr_cts + jw_cts + age + gender + educ2 + race
)
f_visit_pid_alternative_rr <-
formula(
activity_yt_n_video_alternative_all ~  rr_cts + jw_cts  + age + gender + educ2 + race
)
f_visit_pid_extremist_rr <-
formula(activity_yt_n_video_extremist_all ~  rr_cts + jw_cts  + age + gender + educ2 + race)
f_visit_pid_mainstream_rr <-
formula(
activity_yt_n_video_mainstream_all  ~  rr_cts + jw_cts + age + gender + educ2 + race
)
# without racial resentment
f_time_pid_alternative_hs <-
formula(
activity_yt_video_time_elapsed_capped_total_alternative_all ~  fem_cts + jw_cts + age + gender + educ2 + race
)
f_time_pid_extremist_hs <-
formula(
activity_yt_video_time_elapsed_capped_total_extremist_all  ~  fem_cts + jw_cts + age + gender + educ2 + race
)
f_time_pid_mainstream_hs <-
formula(
activity_yt_video_time_elapsed_capped_total_mainstream_all  ~  fem_cts + jw_cts + age + gender + educ2 + race
)
f_visit_pid_alternative_hs <-
formula(
activity_yt_n_video_alternative_all ~  fem_cts + jw_cts + age + gender + educ2 + race
)
f_visit_pid_extremist_hs <-
formula(
activity_yt_n_video_extremist_all  ~  fem_cts + jw_cts + age + gender + educ2 + race
)
f_visit_pid_mainstream_hs <-
formula(
activity_yt_n_video_mainstream_all  ~  fem_cts + jw_cts + age + gender + educ2 + race
)
time_rr_fs <- list(
f_time_pid_alternative_rr,
f_time_pid_extremist_rr,
f_time_pid_mainstream_rr
)
visit_rr_fs <- list(
f_visit_pid_alternative_rr,
f_visit_pid_extremist_rr,
f_visit_pid_mainstream_rr
)
time_hs_fs <- list(
f_time_pid_alternative_hs,
f_time_pid_extremist_hs,
f_time_pid_mainstream_hs
)
visit_hs_fs <- list(
f_visit_pid_alternative_hs,
f_visit_pid_extremist_hs,
f_visit_pid_mainstream_hs
)
QP_time_rr_fit <- list()
QP_time_hs_fit <- list()
QP_visit_rr_fit <- list()
QP_visit_hs_fit <- list()
for (i in 1:length(time_rr_fs)) {
QP_time_rr_fit[[i]] <-
robust_weighted_quasipoisson(formula = time_rr_fs[[i]])
QP_time_hs_fit[[i]] <-
robust_weighted_quasipoisson(formula = time_hs_fs[[i]])
QP_visit_rr_fit[[i]] <-
robust_weighted_quasipoisson(formula = visit_rr_fs[[i]])
QP_visit_hs_fit[[i]] <-
robust_weighted_quasipoisson(formula = visit_hs_fs[[i]])
}
# code chunk settings
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
fig.width = 12,
fig.align = 'center')
usethis::use_blank_slate()
# Suppress summarise info
options(dplyr.summarise.inform = FALSE)
### ----------- packages
pacman::p_load(tidyverse,
data.table,
sjlabelled,
sjmisc,
psych,
lubridate,
# estimation
survey,
sandwich,
lmtest,
# plotting / tables
waffle,
cowplot,
purrr,
texreg,
ggimage,
ggpattern,
kableExtra,
stargazer)
# survey + extension data for individuals
merged_data <- read_rds("data/yg_browser_cces_merged.rds")
# activity data
activity_data <- read_rds("data/activity_yg_cces.rds")
# subscriptions data
summarize_subscribe_table <-
read_csv("data/summarize_subscribe_table.csv")
# referrers data (see build.R for construction of these tables)
on_platform_referrers_by_channel <-
read_csv('data/on_platform_referrers_by_channel.csv')
aggregated_referrers_by_channel <-
read_csv('data/aggregated_referrers_by_channel.csv')
# list of referrers (see appendix figs script for list of referrers)
referrers_list <- read_rds('data/referrers_list.rds')
external_referrers <- referrers_list$external_referrers
internal_referrers_other <- referrers_list$internal_referrers_other
internal_referrers <- referrers_list$internal_referrers
# recommendations data
recs_data <-
read_delim("data/recommendation_pipeline.tsv", delim = '\t')
glimpse()
glimpse(merged_data)
glimpse(activity_data)
